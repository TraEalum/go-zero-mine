syntax = "proto3";

option go_package = "../product";

package product;

// Already Exist Table:
// Spu
// Sku
// SkuAttribute
// SkuRental
// SpuLogistics
// SpuMsInfo
// SpuPicture
// SpuService
// SpuTarget
// EsCityPush
// TblGoodsScoreV2
// SortCriterionModel
// SortCriterionScore
// PromotionTemplate
// PromotionTemplateModificationRecord
// Exist Table End

//指定message生成api struct
// Api Struct Gen
// SpuTarget
// SpuMsInfo
// SpuService
// SpuPicture
// SpuLogistics
// SkuAttribute
// SkuRental
// SkuRentalInfo
// Struct Gen End

// Message Record Start
//--------------------------------商品主表SPU--------------------------------
message Spu {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;          //主键
  string name = 2;       //商品名称
  string subTitle = 3;   //副标题
  string code = 4;       // SPU编码
  int64 condition = 5;   //商品成色(1.全新,2.二手,3.未知)
  string synopsis = 6;   //简介
  int64 serverId = 7;    //商家id
  int64 categoryId = 8;  //分类id
  int64 brandId = 9;     //品牌id
  int64 spuModelId = 10; //型号id
  string cover = 11;     //封面图(小图)
  int64 status =
      12; //状态(1-草稿、20-审核中、10-上架中、21-审核不通过、30-已下架、31-系统下架)
  int64 releaseStatus =
      13; //发布中状态(正常、修改待审核、修改已通过、修改不通过)
  string downReason = 14;   //下架原因
  int64 isDeleted = 15;     //是否删除
  int64 createdBy = 16;     //创建人
  int64 lastUpdatedBy = 17; //最后修改者
  int64 createdAt = 18;     //创建时间
  int64 updatedAt = 19;     //修改时间
  int64 scene = 20;         //场景-位运算 1.个人;2.码商;4.企销
  int64 sign = 21; // spu标志-位运算 1.安心租;2.使用商品副图;4.平台代发
  int64 minTerm = 22; //最低起租日
  // Database Tag End. DO NOT EDIT!!!
  repeated SpuTarget target = 23;
  repeated SpuService service = 24;
  repeated SpuLogistics logistics = 25;
  SpuMsInfo msInfo = 26;
  repeated SpuPicture picture = 27;
  repeated Sku sku = 28;

  // Custom Tag .You Can Edit.
}

message SpuFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;      // pageNo
  int64 pageSize = 2;    // pageSize
  int64 id = 3;          //主键
  string name = 4;       //商品名称
  string subTitle = 5;   //副标题
  string code = 6;       // SPU编码
  int64 condition = 7;   //商品成色(1.全新,2.二手,3.未知)
  string synopsis = 8;   //简介
  int64 serverId = 9;    //商家id
  int64 categoryId = 10; //分类id
  int64 brandId = 11;    //品牌id
  int64 spuModelId = 12; //型号id
  string cover = 13;     //封面图(小图)
  int64 status =
      14; //状态(1-草稿、20-审核中、10-上架中、21-审核不通过、30-已下架、31-系统下架)
  int64 releaseStatus =
      15; //发布中状态(正常、修改待审核、修改已通过、修改不通过)
  string downReason = 16;   //下架原因
  int64 isDeleted = 17;     //是否删除
  int64 createdBy = 18;     //创建人
  int64 lastUpdatedBy = 19; //最后修改者
  int64 createdAt = 20;     //创建时间
  int64 updatedAt = 21;     //修改时间
  int64 scene = 22;         //场景-位运算 1.个人;2.码商;4.企销
  int64 sign = 23; // spu标志-位运算 1.安心租;2.使用商品副图;4.平台代发
  int64 minTerm = 24;  //最低起租日
  int32 infoSign = 25; // 信息位
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuList {
  repeated Spu spu = 1; // spuList
  int64 totalPage = 2;  //
  int64 totalCount = 3; //
  int64 curPage = 4;    //
}
//--------------------------------商品套餐SKU--------------------------------
message Sku {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;    //主键
  int64 spuId = 2; // SpuId
  string icon = 3; //套餐图片
  int64 type = 4; //套餐类型 1:租完须归还;2:租完可归还/买断;3:租完即送
  string deposit = 5;   //押金
  string price = 6;     //买断价
  string msPrice = 7;   //码商购买金额
  int64 stock = 8;      //库存
  int64 status = 9;     //状态 1.关闭;10.正常
  int64 isDeleted = 10; //是否删除
  int64 sort = 11;      //展示顺序
  int64 sign = 12; // sku标志-位运算 1.限制续租;2.购买;4.码商购买
  int64 createdAt = 13; //创建时间
  int64 updatedAt = 14; //修改时间
  // Database Tag End. DO NOT EDIT!!!
  repeated SkuAttribute attribute = 15;
  repeated SkuRental rental = 16;

  // Custom Tag .You Can Edit.
}

message SkuFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;   // pageNo
  int64 pageSize = 2; // pageSize
  int64 id = 3;       //主键
  int64 spuId = 4;    // SpuId
  string icon = 5;    //套餐图片
  int64 type = 6; //套餐类型 1:租完须归还;2:租完可归还/买断;3:租完即送
  string deposit = 7;   //押金
  string price = 8;     //买断价
  string msPrice = 9;   //码商购买金额
  int64 stock = 10;     //库存
  int64 status = 11;    //状态 1.关闭;10.正常
  int64 isDeleted = 12; //是否删除
  int64 sort = 13;      //展示顺序
  int64 sign = 14; // sku标志-位运算 1.限制续租;2.购买;4.码商购买
  int64 createdAt = 15; //创建时间
  int64 updatedAt = 16; //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SkuList {
  repeated Sku sku = 1; // skuList
  int64 totalPage = 2;  //
  int64 totalCount = 3; //
  int64 curPage = 4;    //
}
//--------------------------------sku属性--------------------------------
message SkuAttribute {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;     //主键
  int64 skuId = 2;  // skuId
  int64 type = 3;   //属性类型 1.自定义套餐,2.颜色 3.自定义规格
  string title = 4; //属性标题
  string value = 5; //属性值
  int64 sort = 6;   //排序
  int64 createdAt = 7; //创建时间
  int64 updatedAt = 8; //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SkuAttributeFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;   // pageNo
  int64 pageSize = 2; // pageSize
  int64 id = 3;       //主键
  int64 skuId = 4;    // skuId
  int64 type = 5;   //属性类型 1.自定义套餐,2.颜色 3.自定义规格
  string title = 6; //属性标题
  string value = 7; //属性值
  int64 sort = 8;   //排序
  int64 createdAt = 9;  //创建时间
  int64 updatedAt = 10; //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SkuAttributeList {
  repeated SkuAttribute skuAttribute = 1; // skuAttributeList
  int64 totalPage = 2;                    //
  int64 totalCount = 3;                   //
  int64 curPage = 4;                      //
}
//--------------------------------SKU租金--------------------------------
message SkuRental {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;           //主键
  int64 skuId = 2;        // skuId
  string rental = 3;      //日租金
  string totalRental = 4; //总租金
  int64 days = 5;         //租期(天)
  int64 createdAt = 6;    //创建时间
  int64 updatedAt = 7;    //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SkuRentalFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;       // pageNo
  int64 pageSize = 2;     // pageSize
  int64 id = 3;           //主键
  int64 skuId = 4;        // skuId
  string rental = 5;      //日租金
  string totalRental = 6; //总租金
  int64 days = 7;         //租期(天)
  int64 createdAt = 8;    //创建时间
  int64 updatedAt = 9;    //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SkuRentalList {
  repeated SkuRental skuRental = 1; // skuRentalList
  int64 totalPage = 2;              //
  int64 totalCount = 3;             //
  int64 curPage = 4;                //
}

//--------------------------------商品物流信息v2--------------------------------
message SpuLogistics {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;        // 主键
  int64 spuId = 2;     // spuId
  int64 type = 3;      //物流类型 1.寄出;2.寄回
  string province = 4; //省
  string city = 5;     //市
  string region = 6;   //区/县
  string address = 7;  //详细地址
  int64 regionId = 8;  //地区字典id
  int64 payType = 9;   //支付类型
  string expense = 10; //花费
  int64 tempId = 11;   //运费模板id
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuLogisticsFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;    // pageNo
  int64 pageSize = 2;  // pageSize
  int64 id = 3;        // 主键
  int64 spuId = 4;     // spuId
  int64 type = 5;      //物流类型 1.寄出;2.寄回
  string province = 6; //省
  string city = 7;     //市
  string region = 8;   //区/县
  string address = 9;  //详细地址
  int64 regionId = 10; //地区字典id
  int64 payType =
      11;              //支付类型(1-包邮;2-到付;3-到店,4-统一运费;5运费模板;6.下单满x天包邮;7.无需支付;8.自付,9.到店或物流)
  string expense = 12; //花费
  int64 tempId = 13;   //运费模板id
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuLogisticsList {
  repeated SpuLogistics spuLogistics = 1; // spuLogisticsList
  int64 totalPage = 2;                    //
  int64 totalCount = 3;                   //
  int64 curPage = 4;                      //
}

//--------------------------------spu码商信息--------------------------------
message SpuMsInfo {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;         //主键
  int64 spuId = 2;      // spuId
  int64 agentRatio = 3; //佣金比例
  string tripTag = 4;   //出行方案标签
  int64 sign = 5;       // spu码商标志-位运算
  // 1.精选商品;2.上架码商;4.出行方案;8信用购;16开启月展示
  int64 payType = 6; //支付方式
                     // 1.信用租;2.花呗专区;4.花呗支付和按月支付;8.码商购买;16;码商花呗支付
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuMsInfoFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;     // pageNo
  int64 pageSize = 2;   // pageSize
  int64 id = 3;         //主键
  int64 spuId = 4;      // spuId
  int64 agentRatio = 5; //佣金比例
  string tripTag = 6;   //出行方案标签
  int64 sign = 7;       // spu码商标志-位运算
  // 1.精选商品;2.上架码商;4.出行方案;8信用购;16开启月展示
  int64 payType = 8; //支付方式
                     // 1.信用租;2.花呗专区;4.花呗支付和按月支付;8.码商购买;16;码商花呗支付
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuMsInfoList {
  repeated SpuMsInfo spuMsInfo = 1; // spuMsInfoList
  int64 totalPage = 2;              //
  int64 totalCount = 3;             //
  int64 curPage = 4;                //
}
//--------------------------------商品图片--------------------------------
message SpuPicture {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;    // 主键
  int64 spuId = 2; // spuId
  int64 type = 3; //图片类型 1.图片 2.视频封面 3.视频 4.主图 5.优酷视频
  string picture = 4; //图片/视频
  int64 sort = 5;     //排序
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuPictureFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;   // pageNo
  int64 pageSize = 2; // pageSize
  int64 id = 3;       // 主键
  int64 spuId = 4;    // spuId
  int64 type = 5; //图片类型 1.图片 2.视频封面 3.视频 4.主图 5.优酷视频
  string picture = 6; //图片/视频
  int64 sort = 7;     //排序
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuPictureList {
  repeated SpuPicture spuPicture = 1; // spuPictureList
  int64 totalPage = 2;                //
  int64 totalCount = 3;               //
  int64 curPage = 4;                  //
}
//--------------------------------商品服务--------------------------------
message SpuService {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;            //主键
  int64 spuId = 2;         //商品id
  int64 serviceDictId = 3; //服务id
  int64 createdBy = 4;     //创建人
  int64 createdAt = 5;     //创建时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuServiceFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;        // pageNo
  int64 pageSize = 2;      // pageSize
  int64 id = 3;            //主键
  int64 spuId = 4;         //商品id
  int64 serviceDictId = 5; //服务id
  int64 createdBy = 6;     //创建人
  int64 createdAt = 7;     //创建时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuServiceList {
  repeated SpuService spuService = 1; // spuServiceList
  int64 totalPage = 2;                //
  int64 totalCount = 3;               //
  int64 curPage = 4;                  //
}

//--------------------------------商品条件--------------------------------
message SpuTarget {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;       // 主键
  int64 spuId = 2;    // spuId
  int64 type = 3;     //类型 1.展示城市;2.标签;3.属性
  int64 targetId = 4; //标志id
  string target = 5;  //标志详情
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuTargetFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;   // pageNo
  int64 pageSize = 2; // pageSize
  int64 id = 3;       // 主键
  int64 spuId = 4;    // spuId
  int64 type = 5;     //类型 1.展示城市;2.标签;3.属性
  int64 targetId = 6; //标志id
  string target = 7;  //标志详情
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SpuTargetList {
  repeated SpuTarget spuTarget = 1; // spuTargetList
  int64 totalPage = 2;              //
  int64 totalCount = 3;             //
  int64 curPage = 4;                //
}

//--------------------------------方案城市推送表V2.0--------------------------------
message EsCityPush {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;        //自增id
  string category = 2; //类目
  int64 parentKey = 3; //主产品id
  string itemId = 4;   //类目+方案id
  string miniCity = 5; //企业小程序推送的城市
  string indiCity = 6; //个人小程序推送的城市
  string liveCity = 7; //生活号推送的城市
  string pcCity = 8;   //更多推送的城市
  string wxCity = 9;   //推送微信小程序
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message EsCityPushFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;    // pageNo
  int64 pageSize = 2;  // pageSize
  int64 id = 3;        //自增id
  string category = 4; //类目
  int64 parentKey = 5; //主产品id
  string itemId = 6;   //类目+方案id
  string miniCity = 7; //企业小程序推送的城市
  string indiCity = 8; //个人小程序推送的城市
  string liveCity = 9; //生活号推送的城市
  string pcCity = 10;  //更多推送的城市
  string wxCity = 11;  //推送微信小程序
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message EsCityPushList {
  repeated EsCityPush esCityPush = 1; // esCityPushList
  int64 totalPage = 2;                //
  int64 totalCount = 3;               //
  int64 curPage = 4;                  //
}

//--------------------------------商品分数排名表V2--------------------------------
message TblGoodsScoreV2 {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;          //主键ID
  string itemId = 2;     //商品id (如ph1897) 仅存储主套餐的商品id
  int64 itemType = 3;    // 1 - 旧商品  2 - 新商品
  string itemName = 4;   //商品名称
  int64 serverId = 5;    //商家id (e.g. 5115)
  string evlScore = 6;   //评价分
  string orderScore = 7; //订单分
  string hotScore = 8;   //热度分(可负)
  string newScore = 9;   //新品扶持分
  int64 pushTime = 10;   //上架的时间
  string pushCity = 11;  //区域分城市
  string addTotalScore = 12; //人工加分
  string totalScore = 13;    //商品总分
  int64 createdAt = 14;      //创建时间
  int64 updatedAt = 15;      //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message TblGoodsScoreV2Filter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;      // pageNo
  int64 pageSize = 2;    // pageSize
  int64 id = 3;          //主键ID
  string itemId = 4;     //商品id (如ph1897) 仅存储主套餐的商品id
  int64 itemType = 5;    // 1 - 旧商品  2 - 新商品
  string itemName = 6;   //商品名称
  int64 serverId = 7;    //商家id (e.g. 5115)
  string evlScore = 8;   //评价分
  string orderScore = 9; //订单分
  string hotScore = 10;  //热度分(可负)
  string newScore = 11;  //新品扶持分
  int64 pushTime = 12;   //上架的时间
  string pushCity = 13;  //区域分城市
  string addTotalScore = 14; //人工加分
  string totalScore = 15;    //商品总分
  int64 createdAt = 16;      //创建时间
  int64 updatedAt = 17;      //修改时间
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message TblGoodsScoreV2List {
  repeated TblGoodsScoreV2 tblGoodsScoreV2 = 1; // tblGoodsScoreV2List
  int64 totalPage = 2;                          //
  int64 totalCount = 3;                         //
  int64 curPage = 4;                            //
}

//--------------------------------模型表--------------------------------
message SortCriterionModel {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;        // id
  string name = 2;     //名称
  int64 status = 3;    //状态 1关闭 2使用中
  string detail = 4;   //模型细节
  int64 createdAt = 5; // createdAt
  int64 deletedAt = 6; // deletedAt
  int64 updatedAt = 7; // updatedAt
  string useNode = 8;  //引用节点
  int64 typ = 9; //模型类型 1搜索结果页模型 2搜索页中间页模型
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SortCriterionModelFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;    // pageNo
  int64 pageSize = 2;  // pageSize
  int64 id = 3;        // id
  string name = 4;     //名称
  int64 status = 5;    //状态 1关闭 2使用中
  string detail = 6;   //模型细节
  int64 createdAt = 7; // createdAt
  int64 deletedAt = 8; // deletedAt
  int64 updatedAt = 9; // updatedAt
  string useNode = 10; //引用节点
  int64 typ = 11; //模型类型 1搜索结果页模型 2搜索页中间页模型
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SortCriterionModelList {
  repeated SortCriterionModel sortCriterionModel = 1; // sortCriterionModelList
  int64 totalPage = 2;                                //
  int64 totalCount = 3;                               //
  int64 curPage = 4;                                  //
}
//--------------------------------商品排序分表--------------------------------
message SortCriterionScore {
  // Database Tag Begin. DO NOT EDIT !!!
  int64 id = 1;              // id
  int64 modelId = 2;         //模型id
  string criterionScore = 3; //排序分数明细
  int64 score = 4;           //排序分数
  int64 createdAt = 5;       // createdAt
  int64 spuId = 6;           // spu_id模型类型为联想词时为联想词id
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SortCriterionScoreFilter {
  // Database Tag Begin. DO NOT EDIT!!!
  int64 pageNo = 1;          // pageNo
  int64 pageSize = 2;        // pageSize
  int64 id = 3;              // id
  int64 modelId = 4;         //模型id
  string criterionScore = 5; //排序分数明细
  int64 score = 6;           //排序分数
  int64 createdAt = 7;       // createdAt
  int64 spuId = 8;           // spu_id模型类型为联想词时为联想词id
  // Database Tag End. DO NOT EDIT!!!

  // Custom Tag .You Can Edit.
}

message SortCriterionScoreList {
  repeated SortCriterionScore sortCriterionScore = 1; // sortCriterionScoreList
  int64 totalPage = 2;                                //
  int64 totalCount = 3;                               //
  int64 curPage = 4;                                  //
}

message SubmitAuditResp { string id = 1; }

message ModifyAuditStatusReq {
  ProductAuditScene scene = 1;
  string id = 2;
  int64 auditor = 3;
  string comment = 4;
}

message ProductAuditFilter {
  string id = 1;
  int64 spuId = 2;
  int64 pageNo = 3;   // pageNo
  int64 pageSize = 4; // pageSize
}

message ProductAudit {
  string id = 1;
  int64 spuId = 2;
  int64 serverId = 3;
  string editJson = 4; // 修改详情
  int32 status = 5;    // 审核状态 1.待审核 2.不通过 3.通过 4.撤销
  int64 auditor = 6;   // 审核人
  int64 updateAt = 7;
  int64 createAt = 8;
}

message ProductAuditList {
  repeated Spu spuList = 1; // spuList
  int64 totalPage = 2;      //
  int64 totalCount = 3;     //
  int64 curPage = 4;
}

message ModifyAuditStatusResp {}

message UpdateEsSpuReq { int64 spuId = 1; }

message Product {
  string address = 1;
  repeated string attribute_data = 2;
  string brand = 3;
  string brand_name = 4;
  string category = 5;
  int64 category_id = 6;
  int64 choice_item = 7;
  string cover = 8;
  int32 has_amount = 9;
  string indi_city = 10;
  int32 indi_status = 11;
  int32 is_choice = 12;
  int32 is_new = 13;
  int64 is_sales = 14;
  string item_category_tag = 15;
  int32 item_new_type = 16;
  string item_tag_data = 17;
  string live_city = 18;
  int32 live_status = 19;
  string location = 20;
  int32 m_type = 21;
  int32 min_tenancy = 22;
  string mini_city = 23;
  int32 mini_status = 24;
  string model = 25;
  int32 new_condition = 26;
  bool new_spu = 27;
  string new_str = 28;
  repeated string pc_city = 29;
  int64 pc_status = 30;
  int32 point_id = 31;
  int32 refresh_time = 32;
  repeated int32 rent_tag = 33;
  double rental_rrzuji_ratio = 34;
  int32 return_free_yes = 35;
  double rrzuji_ratio = 36;
  int32 sale_num = 37;
  string scheme_title = 38;
  string search_title = 39;
  int32 send_type = 40;
  int32 server_id = 41;
  string server_name = 42;
  string shipping_city = 43;
  double shop_score = 44;
  repeated EsSkuList sku_list = 45;
  int32 sort_choice = 46;
  string sort_city = 47;
  double sort_score = 48;
  repeated int32 tags = 49;
  int32 use_sf = 50;
  string wx_city = 51;
  int32 wx_status = 52;

  message EsSkuList {
    string age = 1;
    int64 area = 2;
    float black_paper = 3;
    int64 camera = 4;
    string color_type = 5;
    int64 colour = 6;
    float colour_paper = 7;
    string control = 8;
    int32 cpu = 9;
    float deposit = 10;
    int64 driver = 11;
    string dust_way = 12;
    string energy_level = 13;
    string exhaust_rate = 14;
    int64 filter_life = 15;
    string filtering = 16;
    string function = 17;
    int64 functions = 18;
    string gear = 19;
    int32 graphics = 20;
    int32 hard_disk = 21;
    string kind = 22;
    string light = 23;
    string luminance = 24;
    string material = 25;
    float max_rental = 26;
    string max_size = 27;
    int32 memory = 28;
    int64 network = 29;
    string packing = 30;
    string pay_way = 31;
    int64 people = 32;
    int64 power = 33;
    string print_speed = 34;
    int64 quality = 35;
    float rental = 36;
    string resolution = 37;
    string scene = 38;
    int32 scheme_id = 39;
    int32 screen = 40;
    string size = 41;
    string sku_name = 42;
    int64 sku_type = 43;
    int64 storage = 44;
    int32 suffix = 45;
    int32 tenancy = 46;
    string two_sided = 47;
    string use_condition = 48;
    string use_way = 49;
    string wire_length = 50;
  }
}

//--------------------------------商品推广-模板主表--------------------------------
message PromotionTemplate {
  //Database Tag Begin. DO NOT EDIT !!! 
  uint64 id = 1; //主键
  string name = 2; //模板名称
  string remark = 3; //模板备注
  uint64 pricingModel = 4; //定价模式：0-默认模式，1-默认模式2.0
  uint64 categoryId = 5; //分类id
  int64 createdBy = 6; //创建人id
  string createdName = 7; //创建人名称
  int64 updatedBy = 8; //修改人id
  string updatedName = 9; //修改人名称
  uint64 version = 10; //最新版本，默认1
  uint64 createdAt = 11; //创建日期
  uint64 updatedAt = 12; //修改日期
  uint64 deletedAt = 13; //删除日期
  uint64 isDelete = 14; //是否删除：1 - 否，2 - 是
  //Database Tag End. DO NOT EDIT!!!  

  //Custom Tag .You Can Edit. 

}
// 推广模板 sku_sales_info

message SkuSaleInfo {
  repeated SkuTemplateInfo skuTemplateInfo = 1;
  repeated SkuTemplateColor skuTemplateColor = 2;
  repeated SkuTemplateSpec skuTemplateSpec = 3;
  string typ = 4;
  string LeasePlanType = 5;
  string specName = 6 ;
  repeated SkuRentalInfo  skuRentalInfo = 7; // 租期信息
}

// sku_rental_info
message SkuRentalInfo {
  float averageRent_1 = 1;  // 一天平均租金
  float averageRent_3 = 2 ;
  float averageRent_7 = 3;
  float averageRent_30 = 4;
  float averageRent_90 = 5;
  float averageRent_180 = 6;
  float averageRent_365 = 7;
  float averageRent_730 = 8;
  float averageRent_1095 = 9;
  float totalRent_1 = 10;
  float totalRent_3= 11;
  float totalRent_7 = 12;
  float totalRent_30 = 13;
  float totalRent_90 = 14;
  float totalRent_180 = 15;
  float totalRent_365 = 16;
  float totalRent_730 = 17;
  float totalRent_1095 = 18;
  float deposit = 19 ; // 押金
  float price = 20 ; // 买断价格
  float msPrice=21 ;
  int64 stock = 22 ; // 库存数量
  bool disabled = 23; // 是否缺货
  float minRental = 24 ; // 日均最小租金
  float maxRental = 25 ; // 日均最大租金
  bool  disable_1 = 26 ; // 租期 1天是否可用
  bool  disable_3 = 27 ;
  bool disable_7 = 28;
  bool disable_8 = 29;
  bool disable_30 = 30;
  bool disable_90 = 31;
  bool disable_180 = 32;
  bool disable_365 = 33;
  bool disable_730 = 34 ;
  bool disable_1095 = 36;
  bool disabledmsPrice = 37;
  float maxRentalAll = 38; // 最大总租金
  float minRentalAll = 39; // 最小总租金
  int64 id = 40 ;
}

//套餐基本信息
message SkuTemplateInfo {
   int64  min = 1 ; // 最少起租天数
   int64  max = 2 ; // 最大可租天数
   string value = 3 ; // 套餐名称
   string name = 4 ; // 套餐名称
}

// 颜色
message SkuTemplateColor {
   repeated string iconList = 1;
   string value = 2 ;// 颜色
   string icon = 3; 
   string name = 4 ;
}

// 自定义规格
message SkuTemplateSpec {
   string name = 1;
   repeated string options = 2;   
}

message PromotionTemplateFilter {
  //Database Tag Begin. DO NOT EDIT!!! 
  int64 pageNo = 1; //pageNo
  int64 pageSize = 2; //pageSize
  uint64 id = 3; //主键
  string name = 4; //模板名称
  string remark = 5; //模板备注
  uint64 pricingModel = 6; //定价模式：0-默认模式，1-默认模式2.0
  uint64 categoryId = 7; //分类id
  int64 createdBy = 8; //创建人id
  string createdName = 9; //创建人名称
  int64 updatedBy = 10; //修改人id
  string updatedName = 11; //修改人名称
  uint64 version = 12; //最新版本，默认1
  uint64 createdAt = 13; //创建日期
  uint64 updatedAt = 14; //修改日期
  uint64 deletedAt = 15; //删除日期
  uint64 isDelete = 16; //是否删除：1 - 否，2 - 是
  //Database Tag End. DO NOT EDIT!!!  

  //Custom Tag .You Can Edit. 

}

message PromotionTemplateList {
  repeated PromotionTemplate promotionTemplate = 1; //promotionTemplateList
  int64 totalPage = 2; //
  int64 totalCount = 3; //
  int64 curPage = 4; //
}
//--------------------------------商品推广-模板版本记录表--------------------------------
message PromotionTemplateModificationRecord {
  //Database Tag Begin. DO NOT EDIT !!! 
  uint64 id = 1; //主键
  uint64 templateId = 2; //模板主表id
  uint64 version = 3; //版本号
  int64 createdBy = 4; //创建人id
  string createdName = 5; //创建人名称
  int64 updatedBy = 6; //修改人id
  string updatedName = 7; //修改人名称
  uint64 createdAt = 8; //创建日期
  uint64 updatedAt = 9; //修改日期
  //Database Tag End. DO NOT EDIT!!!  

  //Custom Tag .You Can Edit. 

}

message PromotionTemplateModificationRecordFilter {
  //Database Tag Begin. DO NOT EDIT!!! 
  int64 pageNo = 1; //pageNo
  int64 pageSize = 2; //pageSize
  uint64 id = 3; //主键
  uint64 templateId = 4; //模板主表id
  uint64 version = 5; //版本号
  int64 createdBy = 6; //创建人id
  string createdName = 7; //创建人名称
  int64 updatedBy = 8; //修改人id
  string updatedName = 9; //修改人名称
  uint64 createdAt = 10; //创建日期
  uint64 updatedAt = 11; //修改日期
  //Database Tag End. DO NOT EDIT!!!  

  //Custom Tag .You Can Edit. 

}

message PromotionTemplateModificationRecordList {
  repeated PromotionTemplateModificationRecord promotionTemplateModificationRecord = 1; //promotionTemplateModificationRecordList
  int64 totalPage = 2; //
  int64 totalCount = 3; //
  int64 curPage = 4; //
}
// Message Record End

enum ProductAuditScene {
  None = 0;
  Pass = 1;   // 通过
  NoPass = 2; // 不通过
  Recall = 3; // 撤回
}

// ------------------------------------
// Rpc Func
// ------------------------------------

service spu {
  // 提交审核
  rpc SubmitAudit(ProductAudit) returns (SubmitAuditResp);
  // 商品审核状态更新
  rpc ModifyAuditStatus(ModifyAuditStatusReq) returns (ModifyAuditStatusResp);
  // 查商品待审核详情
  rpc QueryProductAuditDetail(ProductAuditFilter) returns (Spu);
  // 查商品待审核列表
  rpc QueryProductAuditList(ProductAuditFilter) returns (ProductAuditList);
  // 商品发布
  rpc ReleaseSpu(Spu) returns (Spu);

  //-----------------------商品主表SPU-----------------------
  rpc CreateSpu(Spu) returns (Spu);
  rpc UpdateSpu(Spu) returns (Spu);
  rpc QuerySpuDetail(SpuFilter) returns (Spu);
  rpc QuerySpuList(SpuFilter) returns (SpuList);
}
service sku {
  //-----------------------商品套餐SKU-----------------------
  rpc CreateSku(Sku) returns (Sku);
  rpc UpdateSku(Sku) returns (Sku);
  rpc QuerySkuDetail(SkuFilter) returns (Sku);
  rpc QuerySkuList(SkuFilter) returns (SkuList);
}

service skuAttribute {
  //-----------------------sku属性-----------------------
  rpc CreateSkuAttribute(SkuAttribute) returns (SkuAttribute);
  rpc UpdateSkuAttribute(SkuAttribute) returns (SkuAttribute);
  rpc QuerySkuAttributeDetail(SkuAttributeFilter) returns (SkuAttribute);
  rpc QuerySkuAttributeList(SkuAttributeFilter) returns (SkuAttributeList);
}

service skuRental {
  //-----------------------SKU租金-----------------------
  rpc CreateSkuRental(SkuRental) returns (SkuRental);
  rpc UpdateSkuRental(SkuRental) returns (SkuRental);
  rpc QuerySkuRentalDetail(SkuRentalFilter) returns (SkuRental);
  rpc QuerySkuRentalList(SkuRentalFilter) returns (SkuRentalList);
}

service spuLogistics {
  //-----------------------商品物流信息v2-----------------------
  rpc CreateSpuLogistics(SpuLogistics) returns (SpuLogistics);
  rpc DeleteSpuLogistics(SpuLogistics) returns (SpuLogistics);
  rpc UpdateSpuLogistics(SpuLogistics) returns (SpuLogistics);
  rpc QuerySpuLogisticsDetail(SpuLogisticsFilter) returns (SpuLogistics);
  rpc QuerySpuLogisticsList(SpuLogisticsFilter) returns (SpuLogisticsList);
}

service spuMsInfo {
  //-----------------------spu码商信息-----------------------
  rpc CreateSpuMsInfo(SpuMsInfo) returns (SpuMsInfo);
  rpc UpdateSpuMsInfo(SpuMsInfo) returns (SpuMsInfo);
  rpc QuerySpuMsInfoDetail(SpuMsInfoFilter) returns (SpuMsInfo);
  rpc QuerySpuMsInfoList(SpuMsInfoFilter) returns (SpuMsInfoList);
}

service spuPicture {
  //-----------------------商品图片-----------------------
  rpc CreateSpuPicture(SpuPicture) returns (SpuPicture);
  rpc UpdateSpuPicture(SpuPicture) returns (SpuPicture);
  rpc QuerySpuPictureDetail(SpuPictureFilter) returns (SpuPicture);
  rpc QuerySpuPictureList(SpuPictureFilter) returns (SpuPictureList);
}

service spuService {
  //-----------------------商品服务-----------------------
  rpc CreateSpuService(SpuService) returns (SpuService);
  rpc UpdateSpuService(SpuService) returns (SpuService);
  rpc QuerySpuServiceDetail(SpuServiceFilter) returns (SpuService);
  rpc QuerySpuServiceList(SpuServiceFilter) returns (SpuServiceList);
}

service spuTarget {
  //-----------------------商品条件-----------------------
  rpc CreateSpuTarget(SpuTarget) returns (SpuTarget);
  rpc UpdateSpuTarget(SpuTarget) returns (SpuTarget);
  rpc QuerySpuTargetDetail(SpuTargetFilter) returns (SpuTarget);
  rpc QuerySpuTargetList(SpuTargetFilter) returns (SpuTargetList);
}

service test {
  // 测试es写入，更新
  rpc TestEsOpt(UpdateEsSpuReq) returns (Product);
}

service promotionTemplate {
	 //-----------------------商品推广-模板主表----------------------- 
	 rpc CreatePromotionTemplate(PromotionTemplate) returns (PromotionTemplate); 
	 rpc DeletePromotionTemplate(PromotionTemplate) returns (PromotionTemplate); 
	 rpc UpdatePromotionTemplate(PromotionTemplate) returns (PromotionTemplate); 
	 rpc QueryPromotionTemplateDetail(PromotionTemplateFilter) returns (PromotionTemplate); 
	 rpc QueryPromotionTemplateList(PromotionTemplateFilter) returns (PromotionTemplateList); 
}

service promotionTemplateModificationRecord {
	 //-----------------------商品推广-模板版本记录表----------------------- 
	 rpc CreatePromotionTemplateModificationRecord(PromotionTemplateModificationRecord) returns (PromotionTemplateModificationRecord); 
	 rpc DeletePromotionTemplateModificationRecord(PromotionTemplateModificationRecord) returns (PromotionTemplateModificationRecord); 
	 rpc UpdatePromotionTemplateModificationRecord(PromotionTemplateModificationRecord) returns (PromotionTemplateModificationRecord); 
	 rpc QueryPromotionTemplateModificationRecordDetail(PromotionTemplateModificationRecordFilter) returns (PromotionTemplateModificationRecord); 
	 rpc QueryPromotionTemplateModificationRecordList(PromotionTemplateModificationRecordFilter) returns (PromotionTemplateModificationRecordList); 
	 // Service Record End
}