package gogen

const marshalTemplateConst = "// ----------------create----------------\r\nfunc (r *Create{{.upperStartCamelObject}}Resp) Marshal(p *proto.{{.upperStartCamelObject}}) error {\r\n    r.Id = p.Id\r\n\r\n\treturn nil\r\n}\r\n\r\n\r\nfunc (r *{{.upperStartCamelObject}}) Unmarshal(p *proto.{{.upperStartCamelObject}}) error {\r\n\t{{.unmarshallFields}}\r\n\r\n\treturn nil\r\n}\r\n\r\n\r\n// ----------------query----------------\r\nfunc (r *Query{{.upperStartCamelObject}}Resp) Marshal(p *proto.{{.upperStartCamelObject}}List) error {\r\n    r.CurrPage = p.CurPage\r\n    r.TotalPage = p.TotalPage\r\n    r.TotalCount = p.PageSize\r\n\tMarshal{{.upperStartCamelObject}}Lst(&r.Data,p.{{.upperStartCamelObject}})\r\n\r\n\treturn nil\r\n}\r\n\r\n\r\nfunc (r *Query{{.upperStartCamelObject}}Req) Unmarshal(p *proto.{{.upperStartCamelObject}}Filter) error {\r\n    r.Id = p.Id\r\n    r.PageNo = p.PageNo\r\n    r.PageSize = p.PageSize\r\n\treturn nil\r\n}\r\n\r\n\r\n// ----------------{{.upperStartCamelObject}}----------------\r\nfunc (r *{{.upperStartCamelObject}}) Marshal(p *proto.{{.upperStartCamelObject}}) error {\r\n\t{{.marshalFields}}\r\n\r\n\treturn nil\r\n}\r\n\r\n\r\n\r\nfunc Marshal{{.upperStartCamelObject}}Lst(r *[]{{.upperStartCamelObject}},p []*proto.{{.upperStartCamelObject}}){\r\n\tfor _,item := range p {\r\n\t\tvar tmp {{.upperStartCamelObject}}\r\n\t\ttmp.Marshal(item)\r\n\t\t*r = append(*r,tmp)\r\n\t}\r\n}"
